type Query {
  # Users
  getUserByUsername (username: String!) : User
  getUserById (id: String!) : User
  # Reports
  getReportById (id: String!) : Report
  getAllReportsByUserId (userId: String!) : [Report]
  # Report Templates
  getReportTemplateById (id: String!) : ReportTemplate
  getAllReportTemplatesByUser (id: String!) : [ReportTemplate]
}

type Mutation {
  # Users
  createUser (user: String!) : String @resolver
  updateUser (id: String, user: String!) : User @resolver
  deleteUser (id: String!) : Boolean @resolver
  # Reports
  createReport (id: String!, report: String!) : String @resolver
  updateReport (id: String!, report: String!) : String @resolver
  deleteReport (id: String!) : Boolean @resolver
  # Report Templates
  createReportTemplate (id: String, reportTemplate: String!) : String @resolver
  updateReportTemplate (id: String!, reportTemplate: String!) : String @resolver
  deleteReportTemplate (id: String!) : Boolean @resolver
}

type User {
  id: String!
  role: String
}

type Report {
  id: String!
  userId: String!
  date: String!
  name: String
  fields: [ReportField]
}

type ReportTemplate {
  id: String!
  userId: String!
  name: String!
  fields: [ReportField]
}

type ReportField @embedded {
  id: String!
  type: String!
  name: String!
  value: String
}